parameters:
  Environment:
  ServiceConnection:

jobs:
- deployment: DeployTo_${{ parameters.Environment }}
  environment: ${{ parameters.Environment }}
  pool:
    name: 'DAS - Continuous Integration'
  variables:
  - name: KubernetesNamespace
    value: monitoring
  strategy:
    runOnce:
      deploy:
        steps:
        - checkout: self
          path: 'das-logstash-exporter/'
        - task: replacetokens@3
          displayName: 'Tokenise manifests'
          inputs:
            rootDirectory: '$(Pipeline.Workspace)/das-logstash-exporter/manifests'
            targetFiles: '**/*.yml'
            encoding: 'auto'
            writeBOM: true
            actionOnMissing: 'fail'
            keepToken: false
            tokenPrefix: '__'
            tokenSuffix: '__'
            verbosity: detailed
        - task: KubectlInstaller@0
          displayName: 'Install Kubectl $(KubectlVersion)'
          inputs:
            kubectlVersion: $(KubectlVersion)
        - template: azure-pipelines-templates/deploy/step/kubernetes-create-namespace.yml@das-platform-building-blocks
          parameters:
            AksClusterName: $(AKSSharedClusterName)
            AksResourceGroupName: $(AKSResourceGroupName)
            AzureServiceConnection: ${{ parameters.ServiceConnection }}
            Namespace: $(KubernetesNamespace)
        # apply deployment
        - template: azure-pipelines-templates/deploy/step/kubernetes-apply-manifest.yml@das-platform-building-blocks
          parameters:
            AksClusterName: $(AKSSharedClusterName)
            AksResourceGroupName: $(AKSResourceGroupName)
            AzureServiceConnection: ${{ parameters.ServiceConnection }}
            KubectlVersion: $(KubectlVersion)
            ManifestFile: $(Pipeline.Workspace)/das-logstash-exporter/manifests/statefulset.yml
            Namespace: $(KubernetesNamespace)
